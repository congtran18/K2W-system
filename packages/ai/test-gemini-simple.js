const { GoogleGenerativeAI } = require('@google/generative-ai');

async function testGemini() {
  console.log('üß™ Testing Gemini API key...\n');
  
  const apiKey = process.env.GEMINI_API_KEY || 'AIzaSyBQ-2P0f7kw38k5Ic7E9J2LpTv4opO78wE';
  const genAI = new GoogleGenerativeAI(apiKey);
  const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });

  try {
    const startTime = Date.now();
    const result = await model.generateContent('Vi·∫øt 1 c√¢u ng·∫Øn v·ªÅ container homes b·∫±ng ti·∫øng Vi·ªát (20-30 t·ª´)');
    const response = result.response;
    const duration = Date.now() - startTime;
    
    console.log('‚úÖ GEMINI HO·∫†T ƒê·ªòNG HO√ÄN H·∫¢O!\n');
    console.log('üìù Response:', response.text());
    console.log('‚è±Ô∏è  Th·ªùi gian:', duration, 'ms');
    
    if (response.usageMetadata) {
      const metadata = response.usageMetadata;
      console.log('\nüìä TOKEN USAGE:');
      console.log('   Prompt tokens:', metadata.promptTokenCount);
      console.log('   Completion tokens:', metadata.candidatesTokenCount);
      console.log('   Total tokens:', metadata.totalTokenCount);
      
      // Calculate cost
      const tokens = metadata.totalTokenCount;
      const geminiCost = (tokens / 1000) * 0.00035; // Flash pricing
      const openaiCost = (tokens / 1000) * 0.03; // GPT-4 pricing
      const savings = ((openaiCost - geminiCost) / openaiCost * 100).toFixed(1);
      
      console.log('\nüí∞ CHI PH√ç:');
      console.log('   Gemini Flash: $' + geminiCost.toFixed(6));
      console.log('   OpenAI GPT-4: $' + openaiCost.toFixed(6));
      console.log('   üí∏ TI·∫æT KI·ªÜM: ' + savings + '%');
      
      // Monthly projection
      const monthlyRequests = 500;
      const monthlyCostGemini = geminiCost * monthlyRequests;
      const monthlyCostOpenAI = openaiCost * monthlyRequests;
      console.log('\nüìÖ D·ª∞ √ÅN H√ÄNG TH√ÅNG (500 contents):');
      console.log('   Gemini: $' + monthlyCostGemini.toFixed(2));
      console.log('   OpenAI: $' + monthlyCostOpenAI.toFixed(2));
      console.log('   üí∞ Ti·∫øt ki·ªám: $' + (monthlyCostOpenAI - monthlyCostGemini).toFixed(2) + '/th√°ng');
    }
    
    console.log('\nüéâ GEMINI S·∫¥N S√ÄNG S·ª¨ D·ª§NG!');
    console.log('‚úÖ Text generation: OK');
    console.log('‚ö†Ô∏è  Image generation: C·∫ßn d√πng DALL-E (OpenAI) ho·∫∑c setup Imagen');
    
  } catch (error) {
    console.error('\n‚ùå L·ªñI:', error.message);
    console.log('\nüîß Ki·ªÉm tra:');
    console.log('- API key c√≥ ƒë√∫ng kh√¥ng?');
    console.log('- C√≥ k·∫øt n·ªëi internet kh√¥ng?');
    console.log('- Quota c√≤n kh√¥ng? (Free: 1500 req/day)');
  }
}

testGemini();
